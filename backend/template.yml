AWSTemplateFormatVersion: '2010-09-09'
Description: Template for deploying Java Spring Boot app with MySQL using Docker on EC2

Parameters:
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t3.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - t3.micro
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
  GitHubToken:
    Description: Personal access token for GitHub
    Type: String
  GitHubRepo:
    Description: GitHub repository URL (without the protocol, e.g., github.com/username/repo.git)
    Type: String
    Default: github.com/xpan1c/punto-dulce.git
  MYSQLRootPassword:
    Description: Root password for MySQL
    Type: String
  MYSQLDatabase:
    Description: MySQL database name
    Type: String
  MYSQLUser:
    Description: MySQL user name
    Type: String
  MYSQLPassword:
    Description: MySQL user password
    Type: String

Resources:
  MyEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      ImageId: ami-04ea724875f692082  # Amazon Linux 2 AMI
      SecurityGroupIds:
        - !Ref InstanceSecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum install -y git
          amazon-linux-extras install docker -y
          service docker start
          systemctl enable docker
          usermod -a -G docker ec2-user
          
          # Configurar memoria swap
          fallocate -l 1G /swapfile
          chmod 600 /swapfile
          mkswap /swapfile
          swapon /swapfile
          echo '/swapfile none swap sw 0 0' | tee -a /etc/fstab
          
          curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose
          git clone https://${GitHubToken}@${GitHubRepo} /home/ec2-user/app
          cd /home/ec2-user/app
          git checkout dev
          cd /home/ec2-user/app/backend
          echo "MYSQL_ROOT_PASSWORD=${MYSQLRootPassword}" >> /home/ec2-user/app/backend/.env
          echo "MYSQL_DATABASE=${MYSQLDatabase}" >> /home/ec2-user/app/backend/.env
          echo "MYSQL_USER=${MYSQLUser}" >> /home/ec2-user/app/backend/.env
          echo "MYSQL_PASSWORD=${MYSQLPassword}" >> /home/ec2-user/app/backend/.env
          chown -R ec2-user:ec2-user /home/ec2-user/app/backend
          docker-compose up -d

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH and HTTP access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8081
          ToPort: 8081
          CidrIp: 0.0.0.0/0

Outputs:
  InstanceId:
    Description: EC2 Instance Id
    Value: !Ref MyEC2Instance
  PublicIP:
    Description: Public IP address of the EC2 instance
    Value: !GetAtt MyEC2Instance.PublicIp
  PublicDNS:
    Description: Public DNS of the EC2 instance
    Value: !GetAtt MyEC2Instance.PublicDnsName
